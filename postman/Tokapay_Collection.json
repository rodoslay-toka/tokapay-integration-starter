{
  "info": { "name": "Tokapay Collection", "_postman_id": "tokapay-collection", "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json" },
  "item": [
    { "name": "Create Dynamic QR", "request": { "method": "POST", "header": [
      { "key": "Client-Id", "value": "{{client_id}}" },
      { "key": "Request-Id", "value": "" },
      { "key": "Request-Time", "value": "" },
      { "key": "Signature", "value": "" },
      { "key": "Content-Type", "value": "application/json" }
    ], "url": "{{base_url}}/v1/acquiring/qr/create", "body": { "mode": "raw", "raw": "{\"productCode\":\"CSB_DIRECTPAY_OFFLINE_STANDARD\",\"order\":{\"orderTitle\":\"Coffee\",\"merchantTransId\":\"m-{{timestamp}}\",\"orderAmount\":{\"value\":\"1500\",\"currency\":\"MXN\"}},\"shopId\":\"{{shop_id}}\"}" } } }
  ],
  "event": [{
    "listen": "prerequest",
    "script": {
      "type": "text/javascript",
      "exec": [
        "// Pre-request Script: build signature headers (documentation & placeholder)",
        "const method = 'POST';",
        "const path = pm.request.url.getPath();",
        "const clientId = pm.environment.get('client_id');",
        "const keyVersion = pm.environment.get('key_version') || '1';",
        "const rid = require('uuid').v4().replace(/-/g,'');",
        "const rtime = Date.now().toString();",
        "let bodyJson = '{}';",
        "if (pm.request.body?.mode === 'raw' && pm.request.body.raw) {",
        "  bodyJson = JSON.stringify(JSON.parse(pm.request.body.raw)); // compact",
        "}",
        "const content = `${method}.${path}.${clientId}.${rid}.${rtime}.${bodyJson}`;",
        "// TODO: sign `content` using RSA-SHA256 (PKCS#1 v1.5) with base64url(no padding), then URL-encode.",
        "// Place the result into:",
        "// const signatureHeader = `algorithm=RSA256,keyVersion=${keyVersion},signature=${encoded}`;",
        "pm.request.headers.upsert({ key: 'Request-Id', value: rid });",
        "pm.request.headers.upsert({ key: 'Request-Time', value: rtime });",
        "// pm.request.headers.upsert({ key: 'Signature', value: signatureHeader });"
      ]
    }
  }]
}
